<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.routediary.repository.DiaryRepository">
  <resultMap id="DiariesMap" type="Diary" autoMapping="true">
    <id property="diaryNo" column="diary_no" />
    
    <association property="client" javaType="Client" autoMapping="true">
      <id property="clientId" column="client_id"/>
      <result property="clientNickname" column="client_nickname"/>
      <result property="clientStatusFlag" column="client_status_flag"/>
    </association>
  </resultMap>

  <resultMap id="DiaryMap" type="Diary" autoMapping="true">
    <id property="diaryNo" column="diary_no" />
    <association property="client" javaType="Client" autoMapping="true">
      <id property="clientId" column="client_id"/>
      <result property="clientNickname" column="client_nickname"/>
      <result property="clientStatusFlag" column="client_status_flag"/>
    </association>
    <collection property="routes" column="diary_no" javaType="List" ofType="Route" select="selectRoutes"/>
    <collection property="diaryImages" column="diary_no" javaType="List" ofType="DiaryImage" select="selectDiaryImages"/>
    <collection property="comments" column="diary_no" javaType="List" ofType="Comment" autoMapping="true" select="selectComments"/>
    <collection property="hashtags" column="diary_no" javaType="List" ofType="Hashtag" autoMapping="true" select="selectHashtags"/>
  </resultMap>
  
  <select id="selectAllDiaries" resultMap="DiariesMap">
		SELECT DISTINCT diary_no
		              , client_id
		              , client_nickname
		              , diary_title
		              , diary_writing_time
		              , diary_modifying_time
		              , diary_start_date
		              , diary_end_date
		              , diary_disclosure_flag
		              , diary_view_cnt
		              , diary_like_cnt
		  FROM  (SELECT d.*
		              , client_nickname
		              , client_status_flag
		              , row_number() OVER (PARTITION BY 1 ORDER BY 1) AS rnum
		           FROM diaries d
		LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
    <choose>
	  <when test="hashtags != null">
		LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
		          WHERE diary_disclosure_flag = 1 AND                 
	    <foreach item="hashtag" index="index" collection="hashtags" separator="OR">
		  <trim prefixOverrides="OR">  
		             OR h.hashtag LIKE '%${hashtag}%'
		  </trim>
		</foreach>
      </when>
	</choose>
	<choose>
	  <when test="order == 1">
		       ORDER BY diary_view_cnt DESC,
	  </when>
	  <when test="order == 2">
		       ORDER BY diary_writing_time DESC,
	  </when>
	  <when test="order == 3">
		       ORDER BY diary_like_cnt DESC,
	  </when> 		  
    </choose>	       
				        diary_writing_time DESC)
		  WHERE rnum BETWEEN #{startRow} AND #{endRow}
	</select>
  <select id="selectCountAll" resultType="int">
  	SELECT COUNT(*) FROM diaries 
  </select>
  <select id="selectCountByDisclosureFlag" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM diaries WHERE diary_disclosure_flag = #{diaryDisclosureFlag}
  </select>
	
  <select id="selectCountByClientId" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM diaries WHERE client_id = #{clientId}
  </select>	
	
  <select id="selectDiariesByClientId" resultMap="DiariesMap">
				SELECT * 
		  FROM (SELECT d.*
		             , client_nickname
		             , client_status_flag
		             , row_number() OVER (PARTITION BY 1 ORDER BY 1) AS rnum
		          FROM diaries d
		LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
		          WHERE d.client_id = #{clientId}
		       ORDER BY diary_writing_time DESC)
		 WHERE rnum BETWEEN #{startRow} AND #{endRow}
  </select>
	
  <select id="selectDiaries" resultMap="DiariesMap">
		SELECT DISTINCT diary_no
		              , client_id
		              , client_nickname
		              , diary_title
		              , diary_writing_time
		              , diary_modifying_time
		              , diary_start_date
		              , diary_end_date
		              , diary_disclosure_flag
		              , diary_view_cnt
		              , diary_like_cnt
		  FROM  (SELECT d.*
		              , client_nickname
		              , client_status_flag
		              , row_number() OVER (PARTITION BY 1 ORDER BY 1) AS rnum
		           FROM diaries d
		LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
    <choose>
	  <when test="hashtags != null">
		LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
		          WHERE diary_disclosure_flag = 1 AND                 
	    <foreach item="hashtag" index="index" collection="hashtags" separator="OR">
		  <trim prefixOverrides="OR">  
		             OR h.hashtag LIKE '%${hashtag}%'
		  </trim>
		</foreach>
      </when>
	  <otherwise>
		          WHERE diary_disclosure_flag = 1     		
	  </otherwise>
	</choose>
		  ) WHERE rnum BETWEEN #{startRow} AND #{endRow}
		  	<choose>
	  <when test="order == 1">
		       ORDER BY diary_view_cnt DESC,
	  </when>
	  <when test="order == 2">
		       ORDER BY diary_writing_time DESC,
	  </when>
	  <when test="order == 3">
		       ORDER BY diary_like_cnt DESC,
	  </when> 		  
    </choose>
    				        diary_writing_time DESC		
  </select>
	
	<!-- selectDiary()에 필요한 코드 START -->
  <select id="selectDiary" parameterType="int" resultMap="DiaryMap">
		         SELECT *
		           FROM diaries d
		LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
		          WHERE d.diary_no = #{diaryNo}
  </select>	
  <select id="selectRoutes" parameterType="int" resultType="Route">
		         SELECT *
		           FROM routes
		          WHERE diary_no = #{diaryNo}
  </select>	
  <select id="selectDiaryImages" parameterType="int" resultType="DiaryImage">
		         SELECT *
		           FROM diary_images
		          WHERE diary_no = #{diaryNo}
  </select>	
  <select id="selectComments" parameterType="int" resultType="Comment">
		         SELECT *
		           FROM comments
		          WHERE diary_no = #{diaryNo}
  </select>	
  <select id="selectHashtags" parameterType="int" resultType="Hashtag">
		         SELECT *
		           FROM hashtags
		          WHERE diary_no = #{diaryNo}
  </select>	
	<!-- selectDiary()에 필요한 코드 END -->
		
  <insert id="insert" parameterType="Diary">
	INSERT INTO diaries (diary_no, client_id, diary_title, diary_writing_time, 
	                     diary_start_date, diary_end_date, diary_disclosure_flag,
	                     diary_view_cnt, diary_like_cnt)
	     VALUES (diary_no_seq.NEXTVAL
	           , #{client.clientId}
	           , #{diaryTitle}
	           , SYSDATE
	           , #{diaryStartDate}
	           , #{diaryEndDate}
	           , #{diaryDisclosureFlag}
	           , 0 
	           , 0
	           )
  </insert>	

  <select id="selectLatestDiaryNo" resultType="int">
    SELECT diary_no_seq.CURRVAL FROM dual
  </select>

  <update id="update" parameterType="Diary">
	UPDATE diaries
	<set>
           diary_title = #{diaryTitle}
         , diary_start_date = #{diaryStartDate}
         , diary_end_date = #{diaryEndDate}
         , diary_disclosure_flag = #{diaryDisclosureFlag}
	     , diary_modifying_time = SYSDATE  
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>			
  
  <delete id="delete" parameterType="int">
	DELETE FROM diaries
	 WHERE diary_no = #{diaryNo}
  </delete>

  <update id="updateViewCnt" parameterType="int">
	UPDATE diaries
	<set>
           diary_view_cnt = diary_view_cnt + 1 
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>	
  
  <update id="updateIncreaseLikeCnt" parameterType="int">
	UPDATE diaries
	<set>
           diary_like_cnt = diary_like_cnt + 1 
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>	
  
    <update id="updateDecreaseLikeCnt" parameterType="int">
	UPDATE diaries
	<set>
           diary_like_cnt = diary_like_cnt - 1 
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>	
</mapper>