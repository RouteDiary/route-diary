<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.routediary.repository.DiaryRepository">
  <resultMap id="DiariesMap" type="Diary" autoMapping="true">
    <id property="diaryNo" column="diary_no" />
    <association property="client" javaType="Client">
      <id property="clientId" column="client_id"/>
      <result property="clientNickname" column="client_nickname"/>
    </association>
  </resultMap>

  <resultMap id="DiaryMap" type="Diary">
    <id property="diaryNo" column="diary_no"/>
    <result property="diaryTitle" column="diary_title"/>
    <result property="diaryWritingTime" column="diary_writing_time"/>
    <result property="diaryModifyingTime" column="diary_modifying_time"/>
    <result property="diaryStartDate" column="diary_start_date"/>
    <result property="diaryEndDate" column="diary_end_date"/>
    <result property="diaryDisclosureFlag" column="diary_disclosure_flag"/>
    <result property="diaryViewCnt" column="diary_view_cnt"/>
    <result property="diaryLikeCnt" column="diary_like_cnt"/>
    <association property="client" javaType="Client" resultMap="ClientMap"/>
    <collection property="routes" column="diary_no" javaType="List" ofType="Route" resultMap="RouteMap"/>
    <collection property="comments" column="diary_no" javaType="List" ofType="Comment" resultMap="CommentMap"/>
    <collection property="hashtags" column="diary_no" javaType="List" ofType="Hashtag" resultMap="HashtagMap"/>
  	<collection property="likes" ofType="Like" autoMapping="true"/>
  </resultMap>
  
  <!--  다이어리 상세용 ResultMap :작성자 오문정 
  다이어디모든내용, 작성자NickName, 루트모든내용,  댓글모든내용, 해시태그모든내용, 좋아요모든내용
  -->
  <resultMap id="DiaryMapTest"  type="Diary" autoMapping="true">
    <id property="diaryNo" column="diary_no" />
    <association property="client" javaType="Client" autoMapping="true">
    	<id property="clientId" column="client_id" />
    </association>
    <collection property="routes" ofType="Route" autoMapping="true">
    	<id property="diaryNo" column="diary_no" />
    	<id property="routeNo" column="route_no" />
    	
    </collection>
    <collection property="comments" ofType="Comment" autoMapping="true">
    	<id property="diaryNo" column="diary_no" />
    	<id property="commentNo" column="comment_no"/>
    	<association property="client" javaType="Client" >
    		<id property="clientId" column="com_client_id"/>
    		<result property="clientNickname" column="com_client_nickname"/>
    	</association>
    </collection>
    <collection property="hashtags"  ofType="Hashtag" >
        <id property="diaryNo" column="diary_no" />
        <id property="hashtag" column="hashtag" />
    </collection>
  	<collection property="likes" ofType="Like" autoMapping="true">
  	    <id property="diaryNo" column="like_diary_no" />
  	    <id property="clientId" column="like_client_id" />
  	</collection>
  </resultMap>
  <!-- 다이어리 상세용 ResultMap END  -->
  <resultMap id="ClientMap" type="Client">
    <id property="clientId" column="client_id" />
    <result property="clientNickname" column="client_nickname" />
  </resultMap>  
  
  <resultMap id="RouteMap" type="Route">
    <id property="diaryNo" column="diary_no"/>
    <id property="routeNo" column="route_no"/>
    <result property="routeContent" column="route_content"/>
    <result property="kakaoMapId" column="kakao_map_id"/>  
  </resultMap>  
  <resultMap id="CommentMap" type="Comment">
    <id property="diaryNo" column="diary_no"/>
    <id property="commentNo" column="comment_no"/>
    <result property="commentContent" column="comment_content"/>
    <result property="commentWritingTime" column="comment_writing_time"/>
    <association property="client" javaType="Client" resultMap="ClientMap"/>
  </resultMap>
  <resultMap id="HashtagMap" type="Hashtag">
    <id property="diaryNo" column="diary_no"/>
    <id property="hashtag" column="hashtag"/>  
  </resultMap>
    
  <select id="selectAllDiaries" resultMap="DiariesMap">
		SELECT DISTINCT diary_no
		              , client_id
		              , client_nickname
		              , diary_title
		              , diary_writing_time
		              , diary_modifying_time
		              , diary_start_date
		              , diary_end_date
		              , diary_disclosure_flag
		              , diary_view_cnt
		              , diary_like_cnt
		  FROM  (SELECT d.*
		              , client_nickname
		              , client_status_flag
		              , row_number() OVER (PARTITION BY 1 ORDER BY 1) AS rnum
		           FROM diaries d
		LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
    <choose>
	  <when test="hashtags != null">
		LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
		          WHERE diary_disclosure_flag = 1 AND
	    <foreach item="hashtag" index="index" collection="hashtags" separator="OR">
		  <trim prefixOverrides="OR">
		             OR h.hashtag LIKE '%${hashtag}%'
		  </trim>
		</foreach>
      </when>
	</choose>
	<choose>
	  <when test="order == 1">
		       ORDER BY diary_view_cnt DESC,
	  </when>
	  <when test="order == 2">
		       ORDER BY diary_writing_time DESC,
	  </when>
	  <when test="order == 3">
		       ORDER BY diary_like_cnt DESC,
	  </when>
    </choose>
				        diary_writing_time DESC)
		  WHERE rnum BETWEEN #{startRow} AND #{endRow}
  </select>
	
  <select id="selectCountAll" resultType="int">
  	SELECT COUNT(*) FROM diaries
	<choose>
	  <when test="hashtags != null">
	  		LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
	  		WHERE 
	    <foreach item="hashtag" collection="hashtags" separator="OR">
		  <trim prefixOverrides="OR">
		             OR h.hashtag LIKE '%${hashtag}%' 
		  </trim>
		</foreach>
      </when>
    </choose>
  </select>
  
  <select id="selectCountByDisclosureFlag" resultType="int">
		SELECT COUNT(*) FROM diaries d
	<choose>
	  <when test="hashtags != null">
	  		LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
	  		WHERE diary_disclosure_flag = #{diaryDisclosureFlag} AND
	    <foreach item="hashtag" collection="hashtags" separator="OR">
		  <trim prefixOverrides="OR">
		             OR h.hashtag LIKE '%${hashtag}%' 
		  </trim>
		</foreach>
      </when>
    </choose>
  </select>

  <select id="selectCountByClientId" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM diaries WHERE client_id = #{clientId}
  </select>

  <select id="selectDiariesByClientId" resultMap="DiariesMap">
SELECT DISTINCT second.*
        FROM (SELECT first.* 
                   , ROWNUM AS rnum
                FROM (SELECT d.*
                           , h.hashtag 
                           , client_nickname
                        FROM diaries d
             LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
		     LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
                       WHERE d.client_id = #{clientId}
                    ORDER BY diary_view_cnt DESC, diary_writing_time DESC) first          
             ) second
		 WHERE rnum BETWEEN #{startRow} AND #{endRow}
  </select>

  <select id="selectDiaries" resultMap="DiariesMap">
SELECT DISTINCT second.*
        FROM (SELECT first.* 
                   , ROWNUM AS rnum
                FROM (SELECT d.*
                           , client_nickname
                        FROM diaries d
             LEFT OUTER JOIN clients c ON (d.client_id = c.client_id)
    <choose>
	  <when test="hashtags != null">
		LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no)
		          WHERE diary_disclosure_flag = 1 AND
	    <foreach item="hashtag" collection="hashtags" separator="OR">
		  <trim prefixOverrides="(OR" suffixOverrides=")">
		             (OR h.hashtag LIKE '%${hashtag}%' )
		  </trim>
		</foreach>
      </when>
	  <otherwise>
	              WHERE diary_disclosure_flag = 1 
	  </otherwise>
	</choose>
	<choose>
	  <when test="order == 1">
		       ORDER BY diary_view_cnt DESC,
	  </when>
	  <when test="order == 2">
		       ORDER BY diary_writing_time DESC,
	  </when>
	  <when test="order == 3">
		       ORDER BY diary_like_cnt DESC,
	  </when>
    </choose>
		diary_writing_time DESC) first          
		             ) second
		       WHERE rnum BETWEEN #{startRow} AND #{endRow}
  </select>

  <select id="selectDiary" parameterType="int" resultMap="DiaryMapTest">
SELECT d.*, 
       c.client_id, 
       c.client_nickname, 
       r.*, 
       h.hashtag, 
       com.comment_no comment_no, 
       com.client_id com_client_id, 
       com.comment_content, 
       com.comment_writing_time, 
       cl.client_nickname com_client_nickname, 
       l.diary_no like_diary_no, 
       l.client_id like_client_id 
FROM diaries d LEFT OUTER JOIN clients c ON (d.client_id = c.client_id) 
               LEFT OUTER JOIN routes r ON (d.diary_no = r.diary_no) 
               LEFT OUTER JOIN hashtags h ON (d.diary_no = h.diary_no) 
               LEFT OUTER JOIN comments com ON (d.diary_no = com.diary_no) 
               LEFT OUTER JOIN clients cl ON (com.client_id = cl.client_id) 
               LEFT OUTER JOIN clients cl ON (com.client_id = cl.client_id) 
               LEFT OUTER JOIN likes l ON (d.diary_no = l.diary_no) 
WHERE d.diary_no = #{diaryNo}
  </select>

	<!-- selectDiary()에 필요한 코드 END -->

  <insert id="insert" parameterType="Diary">
	INSERT INTO diaries (diary_no, client_id, diary_title, diary_writing_time,
	                     diary_start_date, diary_end_date, diary_disclosure_flag,
	                     diary_view_cnt, diary_like_cnt)
	     VALUES (diary_no_seq.NEXTVAL
	           , #{client.clientId}
	           , #{diaryTitle}
	           , SYSDATE
	           , #{diaryStartDate}
	           , #{diaryEndDate}
	           , #{diaryDisclosureFlag}
	           , 0
	           , 0
	           )
  </insert>

  <select id="selectLatestDiaryNo" resultType="int">
    SELECT diary_no_seq.CURRVAL FROM dual
  </select>

  <update id="update" parameterType="Diary">
	UPDATE diaries
	<set>
           diary_title = #{diaryTitle}
         , diary_start_date = #{diaryStartDate}
         , diary_end_date = #{diaryEndDate}
         , diary_disclosure_flag = #{diaryDisclosureFlag}
	     , diary_modifying_time = SYSDATE
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>

  <delete id="delete" parameterType="int">
	DELETE FROM diaries
	 WHERE diary_no = #{diaryNo}
  </delete>

  <update id="updateViewCnt" parameterType="int">
	UPDATE diaries
	<set>
           diary_view_cnt = diary_view_cnt + 1
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>

  <update id="updateIncreaseLikeCnt" parameterType="int">
	UPDATE diaries
	<set>
           diary_like_cnt = diary_like_cnt + 1
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>

    <update id="updateDecreaseLikeCnt" parameterType="int">
	UPDATE diaries
	<set>
           diary_like_cnt = diary_like_cnt - 1
	</set>
	 WHERE diary_no = #{diaryNo}
  </update>
</mapper>
