package com.my.control;

import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.net.URLEncoder;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.my.dto.Board;
import com.my.dto.ResultBean;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping("/diary")
public class ListImagesController {
	private Logger logger = LoggerFactory.getLogger(getClass());
	@GetMapping("/list")
	public ResponseEntity<?> list(){
		List<Map<String,Object>> resultList = new ArrayList<>();
		
		for(int i=1; i<=5; i++) {
			Map<String,Object> map = new HashMap<>();
			Map<String,Object> dto = new HashMap<>();
			dto.put("title", "제목"+i);
			dto.put("content", "내용" + i);
			
			map.put("dto", dto);//diary용 DTO
			
//			String saveDirectory = "c:\\files";
			String tumbnameFileName = "s_" + i + ".png";
			map.put("thumbnail", tumbnameFileName);
			
			resultList.add(map);
		}		
		return new ResponseEntity<>(resultList, HttpStatus.OK);		
	}
	@GetMapping("/downloadimage")
	public ResponseEntity<?>  downloadImage(String imageFileName) {
		String saveDirectory = "c:\\files";
		File thumbnailFile = new File(saveDirectory, imageFileName);
		HttpHeaders responseHeaders = new HttpHeaders();
		try {
			responseHeaders.set(HttpHeaders.CONTENT_LENGTH, thumbnailFile.length()+"");
	    	responseHeaders.set(HttpHeaders.CONTENT_TYPE, Files.probeContentType(thumbnailFile.toPath()));
		   	responseHeaders.set(HttpHeaders.CONTENT_DISPOSITION, "inline; filename="+URLEncoder.encode("a", "UTF-8"));
			logger.info("섬네일파일 다운로드");
	    	return new ResponseEntity<>(FileCopyUtils.copyToByteArray(thumbnailFile), responseHeaders, HttpStatus.OK);
		}catch(IOException e) {
			return new ResponseEntity<>("이미지파일 다운로드 실패" , HttpStatus.INTERNAL_SERVER_ERROR);
		}		
	}
	
}
